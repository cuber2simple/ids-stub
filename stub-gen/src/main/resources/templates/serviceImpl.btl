package  ${@curJava.getPackageName()};

<%for(importStr in importJavas){%>
import  ${importStr};
<%}%>
import org.springframework.beans.factory.annotation.Autowired;
import org.apache.commons.beanutils.PropertyUtils;
import org.springframework.stereotype.Service;
import com.github.pagehelper.PageHelper;
import java.util.stream.Collectors;
import com.github.pagehelper.Page;

@Service
public class ${@curJava.getShortName()} implements ${@serviceJava.getShortName()}{

    @Autowired(required = false)
    private ${@mapperJava.getShortName()} mapper;

    @Override
    public boolean create(${@voJava.getShortName()} vo) throws Exception{
        ${@dtoJava.getShortName()} dto = new ${@dtoJava.getShortName()}();
        /** 到时候可能需要更改 **/
        BeanUtils.copyProperties(vo,dto);
        int effectRow = mapper.create(dto);
        return effectRow == 1;
    }

    @Override
    public int update(${@voJava.getShortName()} vo) throws Exception {
        ${@dtoJava.getShortName()} dto = new ${@dtoJava.getShortName()}();
        BeanUtils.copyProperties(vo,dto);
        return mapper.updateById(dto);
    }

    @Override
    public List<${@voJava.getShortName()}> retrieveAll() throws Exception {
        List<${@dtoJava.getShortName()}> dtoList = mapper.retrieveAll();
        if(dtoList != null && dtoList.size() > 0){
            List<${@voJava.getShortName()}> voList = dtoList.stream().map(dto->{
                ${@voJava.getShortName()} vo = new ${@voJava.getShortName()}();
                BeanUtils.copyProperties(dto,vo);
                return vo;
            }).collect(Collectors.toList());
        }
        return null;
    }

    @Override
    public ${@voJava.getShortName()} selectById(${@primary.getShortName()} id) throws Exception{
        ${@dtoJava.getShortName()} dto = mapper.retrieveById(id);
        if(null != dto){
            ${@voJava.getShortName()} vo = new ${@voJava.getShortName()}();
            BeanUtils.copyProperties(dto,vo);
            return vo;
        }
        return null;
    }

    @Override
    public int deleteById(${@primary.getShortName()} id) throws Exception {
        return mapper.deleteById(id);
    }

    @Override
    public PageResp<${@voJava.getShortName()}> pageQuery(${@voJava.getShortName()} search, int pageSize, int pageNum) throws Exception{
        PageHelper.startPage(pageNum, pageSize);
        Page<${@dtoJava.getShortName()}> page = mapper.retrievePage(PropertyUtils.describe(search));
        PageResp<${@voJava.getShortName()}> pageResp = new PageResp<>(page);
        List<${@dtoJava.getShortName()}> dtoList = page.getResult();
        if(dtoList != null && dtoList.size() > 0){
            List<${@voJava.getShortName()}> voList = dtoList.stream().map(dto->{
                ${@voJava.getShortName()} vo = new ${@voJava.getShortName()}();
                BeanUtils.copyProperties(dto,vo);
                return vo;
            }).collect(Collectors.toList());
            pageResp.setResult(voList);
        }
        return pageResp;
    }


}